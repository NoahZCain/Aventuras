  GetPlaylistLambda:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt AccessRole.Arn
      CodeUri: MusicPlaylistServiceLambda
      Handler: com.nashss.se.musicplaylistservice.lambda.GetPlaylistLambda::handleRequest
      Runtime: java11
      Architectures:
        - x86_64
      MemorySize: 512
      Environment:
        Variables:
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
      Events:
        MusicPlaylistService:
          Type: Api
          Properties:
            Path: /playlists/{id}
            Method: get
            Auth:
              Authorizer: 'NONE'

  SearchPlaylistsLambda:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt AccessRole.Arn
      CodeUri: MusicPlaylistServiceLambda
      Handler: com.nashss.se.musicplaylistservice.lambda.SearchPlaylistsLambda::handleRequest
      Runtime: java11
      Architectures:
        - x86_64
      MemorySize: 512
      Environment:
        Variables:
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
      Events:
        MusicPlaylistService:
          Type: Api
          Properties:
            Path: /playlists/search
            Method: get
            Auth:
              Authorizer: 'NONE'

  GetPlaylistSongsLambda:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt AccessRole.Arn
      CodeUri: MusicPlaylistServiceLambda
      Handler: com.nashss.se.musicplaylistservice.lambda.GetPlaylistSongsLambda::handleRequest
      Runtime: java11
      Architectures:
        - x86_64
      MemorySize: 512
      Environment:
        Variables:
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
      Events:
        MusicPlaylistService:
          Type: Api
          Properties:
            Path: /playlists/{id}/songs
            Method: get
            Auth:
              Authorizer: 'NONE'

  CreatePlaylistLambda:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt AccessRole.Arn
      CodeUri: MusicPlaylistServiceLambda
      Handler: com.nashss.se.musicplaylistservice.lambda.CreatePlaylistLambda::handleRequest
      Runtime: java11
      Architectures:
        - x86_64
      MemorySize: 512
      Environment:
        Variables:
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
      Events:
        MusicPlaylistService:
          Type: Api
          Properties:
            Path: /playlists
            Method: post

  UpdatePlaylistLambda:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt AccessRole.Arn
      CodeUri: MusicPlaylistServiceLambda
      Handler: com.nashss.se.musicplaylistservice.lambda.UpdatePlaylistLambda::handleRequest
      Runtime: java11
      Architectures:
        - x86_64
      MemorySize: 512
      Environment:
        Variables:
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
      Events:
        MusicPlaylistService:
          Type: Api
          Properties:
            Path: /playlists/{id}
            Method: put

  AddSongToPlaylistLambda:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt AccessRole.Arn
      CodeUri: MusicPlaylistServiceLambda
      Handler: com.nashss.se.musicplaylistservice.lambda.AddSongToPlaylistLambda::handleRequest
      Runtime: java11
      Architectures:
        - x86_64
      MemorySize: 512
      Environment:
        Variables:
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
      Events:
        MusicPlaylistService:
          Type: Api
          Properties:
            Path: /playlists/{id}/songs
            Method: post
